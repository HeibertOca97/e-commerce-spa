{"version":3,"file":"static/js/222.bd3417bf.chunk.js","mappings":"wPAGMA,EAAOC,EAAAA,GAAAA,IAAH,g8CAkFJC,GAAmBD,EAAAA,EAAAA,IAAOE,EAAAA,IAAPF,CAAH,wBAVP,qM,kBCnEA,SAASG,IACpB,OAAsCC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAzDA,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,QAC1B,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAeC,EAAAA,EAAAA,KAAfD,WACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACNL,EAAWJ,KACZ,CAACA,KAEJS,EAAAA,EAAAA,YAAU,WACNF,GAASG,EAAAA,EAAAA,IAAc,CACnBC,SAAU,WAEf,CAACJ,IA0CJ,OACI,SAAC,KAAD,CAAiBK,KAAK,OAAtB,SAxCKT,EAIEF,EAAQY,OAAS,EAAId,EAASe,KAAI,SAACC,EAASC,GAAV,OACrC,UAACxB,EAAD,YACI,8BACI,gBAAKyB,IAAKF,EAAQG,MAAOC,MAAOJ,EAAQI,MAAOC,IAAG,oCAA+BL,EAAQI,YAE7F,iBAAKE,UAAU,qBAAf,WACI,eAAIA,UAAU,sBAAd,SAAqCN,EAAQI,SAC7C,eAAGE,UAAU,sBAAb,cAAqCN,EAAQO,MAA7C,WAEJ,gBAAKD,UAAU,uBAAf,UACI,SAAC3B,EAAD,CACA6B,OAAO,UACPC,QAAS,kBAAInB,EAAW,eAAD,OAAgBU,EAAQU,YAX5CT,MAeVf,EAAQa,KAAI,SAACC,EAASC,GAAV,OACb,UAACxB,EAAD,YACI,8BACI,gBAAKyB,IAAKF,EAAQG,MAAOC,MAAOJ,EAAQI,MAAOC,IAAI,+BAEvD,iBAAKC,UAAU,qBAAf,WACI,eAAIA,UAAU,sBAAd,SAAqCN,EAAQI,SAC7C,eAAGE,UAAU,sBAAb,cAAqCN,EAAQO,MAA7C,WAEJ,gBAAKD,UAAU,uBAAf,UACI,SAAC3B,EAAD,CACA6B,OAAO,UACPC,QAAS,kBAAKnB,EAAW,eAAD,OAAgBU,EAAQU,YAX7CT,OApBJ,SAACU,EAAA,EAAD,CAAYC,QAAQ","sources":["features/components/ProductCard/styled.js","features/components/ProductCard/index.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { MdOutlineSearch } from 'react-icons/md'\n\nconst Card = styled.div`\n    margin: 10px;\n    border-radius: 5px;\n    box-shadow: 0px 2px 10px #bbb;\n    width: 100%;\n    overflow: hidden;\n    transition: all 250ms ease-in;\n    position: relative;\n\n    &:hover{\n        box-shadow: 0px 2px 10px #ddd;\n        \n        .product__card-action{\n            transform: scale(1);\n        }\n    }\n\n    & > picture{\n        width: 100%;\n        display: block;\n        overflow: hidden;\n\n        img{\n            width: 100%;\n            height: 100%;\n            display: block;\n            object-fit: cover;\n        }\n    }\n\n    & > .product__card-body{\n        display: grid;\n        grid-template-columns: 1fr auto;\n\n        .product__card-title{\n            padding: 5px;\n        }\n\n        .product__card-price{\n            text-align: center;\n            font-size: 2rem;\n            padding: 5px;\n        }\n    }\n\n    & > .product__card-action{\n        position: absolute;\n        top: 0;\n        left: 0;\n        background-color: rgba(255, 255, 255, .6);\n        width: 100%;\n        height: 100%;\n\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: center;\n\n        transform: scale(0);\n        transition: all 250ms ease-in;\n    }\n    \n    @media screen and (min-width:600px) {\n        max-width: 280px;\n        max-height: 280px;\n\n        & > picture{\n           height: 224px; \n        }\n    }\n`;\n\nconst iconStyle = `\n    font-size: 3.5em;\n    color: #131416;\n    box-shadow: 0px 2px 10px #bbb;\n    background-color: #fff;\n    padding: 5px 8px;\n    border-radius: 50%;\n    margin: 0 10px;             \n`;\n\nconst SearchIconStyled = styled(MdOutlineSearch)`${iconStyle}`;\n\nexport {\n    Card,\n    SearchIconStyled\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getByCategory } from '../../../features/products/productSlice'\nimport { NoResource } from '../../../components/NoResource'\nimport { ContainerStyled } from '../../../styledComponent';\nimport { Card, SearchIconStyled } from './styled';\nimport { useRedirect } from '../../../assets/helpers/redirect.hook';\n\nexport default function ProductCard(){\n    const { products, status, filters } = useSelector(state => state.products);\n    const [success, setSuccess] = useState(false);\n    const { redirectTo } = useRedirect();\n    const dispatch = useDispatch();\n\n    useEffect(() => { \n        setSuccess(status);\n    }, [status]);\n    \n    useEffect(() => { \n        dispatch(getByCategory({\n            category: \"all\",\n        })); \n    }, [dispatch]);\n\n    const layoutProduct = () => {\n        if (!success){\n            return <NoResource message=\"RESOURCE NOT FOUND\" />\n        }\n\n        return filters.length < 1 ? products.map((product, index) => (\n            <Card key={index}>\n                <picture>\n                    <img src={product.image} title={product.title} alt={`Couldn't not load image - ${product.title}`} />\n                </picture>\n                <div className=\"product__card-body\">\n                    <h3 className=\"product__card-title\">{product.title}</h3>\n                    <p className=\"product__card-price\">${product.price} </p>\n                </div>\n                <div className=\"product__card-action\">\n                    <SearchIconStyled \n                    cursor=\"pointer\"\n                    onClick={()=>redirectTo(`view/detail=${product.id}`)}\n                    />\n                </div>\n            </Card>\n        )) : filters.map((product, index) => (\n            <Card key={index}>\n                <picture>\n                    <img src={product.image} title={product.title} alt=\"Couldn't not load image\" />\n                </picture>\n                <div className=\"product__card-body\">\n                    <h3 className=\"product__card-title\">{product.title}</h3>\n                    <p className=\"product__card-price\">${product.price} </p>\n                </div>\n                <div className=\"product__card-action\">\n                    <SearchIconStyled \n                    cursor=\"pointer\"\n                    onClick={()=> redirectTo(`view/detail=${product.id}`)}\n                    />\n                </div>\n            </Card>\n        ));\n    }\n\n    return (\n        <ContainerStyled flex=\"card\">\n        {layoutProduct()}\n\n        </ContainerStyled>\n    );\n}\n\n"],"names":["Card","styled","SearchIconStyled","MdOutlineSearch","ProductCard","useSelector","state","products","status","filters","useState","success","setSuccess","redirectTo","useRedirect","dispatch","useDispatch","useEffect","getByCategory","category","flex","length","map","product","index","src","image","title","alt","className","price","cursor","onClick","id","NoResource","message"],"sourceRoot":""}